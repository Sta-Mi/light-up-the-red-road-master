{"version":3,"file":"pages/poi/index.js","mappingsviBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://mbti-test-mini/./src/pages/poi/index.tsx?c5ba","webpack://mbti-test-mini/._src_pages_poi_index.tsx"],"sourcesContent":["import _classCallCheck from \"E:/dianlianghongtu/dianlianghongtu/hongtu-test-mini/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/dianlianghongtu/dianlianghongtu/hongtu-test-mini/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"E:/dianlianghongtu/dianlianghongtu/hongtu-test-mini/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"E:/dianlianghongtu/dianlianghongtu/hongtu-test-mini/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _defineProperty from \"E:/dianlianghongtu/dianlianghongtu/hongtu-test-mini/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { Image, Input, Map, View } from \"@tarojs/components\";\nimport { AtAccordion, AtList, AtListItem } from 'taro-ui';\nimport Taro from \"@tarojs/taro\";\nimport React, { Component } from \"react\";\nimport amapFile from \"../../libs/amap-wx\";\nimport config from \"../../libs/config\";\nimport markerChecked from \"../../assets/marker_checked.png\";\nimport markerUnChecked from \"../../assets/marker.png\";\nimport getUserLocationIcon from \"../../assets/get-location.png\";\nimport exhibitionTotalData from \"../../data/exhibition_total_data.json\";\nimport redPathData from \"../../data/red_path_data.json\";\nimport onmarkerIdByUser from \"../../data/onmarkerIdByUser.json\";\nimport \"./index.scss\";\nimport GlobalMenu from \"../../components/GlobalMenu\";\n\n//全局wx\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar myAmapFun;\n//蒙层全局ID\n//let currentId=-1;\n\nvar markersData;\nvar PoiPage = /*#__PURE__*/function (_Component) {\n  function PoiPage() {\n    var _this;\n    _classCallCheck(this, PoiPage);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, PoiPage, [].concat(args));\n    _defineProperty(_this, \"$instance\", Taro.getCurrentInstance());\n    _defineProperty(_this, \"state\", {\n      markers: [],\n      poisData: [],\n      latitude: 0,\n      longitude: 0,\n      textData: {},\n      currentId: -1,\n      city: '',\n      scale: 5,\n      distanceFromMe: 0,\n      exhibitionImage: '',\n      exhibitionName: '',\n      exhibitionAddress: '',\n      exhibitionNote: '',\n      exhibitionTime: '',\n      bottomDistance: '97px',\n      maskDisplay: 'none',\n      detailInfoDisplay: 'none',\n      isSearch: false,\n      polyline: [],\n      openAccordion: false\n    });\n    //初始化\n    _defineProperty(_this, \"componentWillMount\", function () {\n      // 初始化高德地图\n      var key = config.Config.key;\n      myAmapFun = new amapFile.AMapWX({\n        key: key\n      });\n    });\n    // 点击标记后触发事件\n    _defineProperty(_this, \"makertap\", function (e) {\n      var that = _this;\n      var id = e.markerId;\n      that.setState({\n        currentId: id\n      }, function () {\n        that.changeMarkerColor();\n      });\n    });\n    // Map组件错误时\n    _defineProperty(_this, \"onmakerError\", function (e) {\n      console.error(e);\n      Taro.showToast({\n        title: '地图加载出错',\n        icon: 'error'\n      });\n    });\n    // 获取用户位置\n    _defineProperty(_this, \"getUserLocation\", function () {\n      var that = _this;\n      Taro.getLocation({\n        type: 'gcj02',\n        success: function success(res) {\n          that.setState({\n            latitude: res.latitude,\n            longitude: res.longitude\n          });\n          // todo 更新用户最新的位置(参数：经度，纬度，用户id)\n        },\n        fail: function fail() {\n          Taro.showToast({\n            title: '请打开定位',\n            icon: 'error'\n          });\n        }\n      });\n    });\n    // 根据用户点击后弹出弹框\n    _defineProperty(_this, \"changeMarkerColor\", function () {\n      var that = _this;\n      //i是exhibitionid\n      var exhibitionItem = exhibitionTotalData.filter(function (item) {\n        return item.id == that.state.currentId;\n      })[0];\n      that.changeSelectMarker(true);\n      that.setState({\n        markers: markersData,\n        exhibitionImage: exhibitionItem.exhibitionImage,\n        exhibitionName: exhibitionItem.exhibitionName,\n        exhibitionAddress: exhibitionItem.exhibitionAddress,\n        exhibitionNote: exhibitionItem.exhibitionNote,\n        exhibitionTime: exhibitionItem.exhibitionStartTime + ' - ' + exhibitionItem.exhibitionFinishTime,\n        bottomDistance: '156px',\n        maskDisplay: 'block',\n        detailInfoDisplay: 'flex'\n      });\n    });\n    //将id=i的marker样式改为选中状态 or 未选中状态\n    _defineProperty(_this, \"changeSelectMarker\", function (isSelectStatus) {\n      var that = _this;\n      markersData.forEach(function (marker) {\n        if (marker.id === that.state.currentId && isSelectStatus) {\n          // Change marker to selected state\n          marker.callout = {\n            content: '📷' + marker.exhibitionName,\n            color: '#000000',\n            fontSize: 20,\n            borderRadius: 10,\n            borderWidth: 3,\n            bgColor: '#ffffff',\n            padding: 10,\n            display: 'ALWAYS',\n            textAlign: 'center'\n          };\n        } else {\n          // Change marker to unselected state\n          marker.callout = {\n            content: '📷' + marker.exhibitionName,\n            color: '#000000',\n            fontSize: 14,\n            borderRadius: 10,\n            borderWidth: -1,\n            bgColor: '#ffffff',\n            padding: 10,\n            display: 'ALWAYS',\n            textAlign: 'center'\n          };\n        }\n      });\n    });\n    //点击搜索框进行搜索\n    _defineProperty(_this, \"bindInput\", function (e) {\n      var _e$currentTarget$data = e.currentTarget.dataset,\n        latitude = _e$currentTarget$data.latitude,\n        longitude = _e$currentTarget$data.longitude;\n      var url = '/pages/inputtips/index';\n      if (latitude && longitude) {\n        url += \"?lonlat=\".concat(longitude, \",\").concat(latitude);\n      }\n      Taro.redirectTo({\n        url: url\n      });\n    });\n    // 从搜索页面返回后，如果在exhibitionTotal中找到了，则弹出周边展馆列表 + 选中状态\n    _defineProperty(_this, \"searchMarkerShowPoiList\", function (paramsFromInputtips) {\n      var searchMarkerId = -1;\n      var that = _this;\n      //todo 根据传递过来的keywords 查询总数组的name===keywords得到唯一一个对象，传入i执行changeMarkerColor()效果类似，只不过底下是列表\n      var exhibitionSecrchItem = exhibitionTotalData.filter(function (item) {\n        if (item.exhibitionName === paramsFromInputtips.searchKeywords) {\n          that.setState({\n            currentId: item.id //用于点击蒙层时，知道更改哪个marker的样式\n          });\n          searchMarkerId = item.id;\n          return item;\n        }\n        return false;\n      });\n      if (exhibitionSecrchItem.length != 0) {\n        //执行获取周边信息\n        var params = {\n          querykeywords: paramsFromInputtips.searchKeywords,\n          success: function success(data) {\n            // 更新中心点，选中状态，显示列表\n            that.changeSelectMarker(true);\n            if (data.poisData.length === 0) {\n              that.setState({\n                isSearch: false,\n                bottomDistance: \"156px\",\n                exhibitionImage: exhibitionSecrchItem[0].exhibitionImage,\n                exhibitionName: exhibitionSecrchItem[0].exhibitionName,\n                exhibitionAddress: exhibitionSecrchItem[0].exhibitionAddress,\n                exhibitionNote: exhibitionSecrchItem[0].exhibitionNote,\n                exhibitionTime: exhibitionSecrchItem[0].exhibitionStartTime + ' - ' + exhibitionSecrchItem[0].exhibitionFinishTime\n              });\n            } else {\n              that.setState({\n                poisData: data.poisData,\n                isSearch: true,\n                bottomDistance: \"52vh\"\n              });\n            }\n            that.setState({\n              scale: 16,\n              markers: markersData,\n              latitude: exhibitionSecrchItem[0].exhibitionLatitude,\n              longitude: exhibitionSecrchItem[0].exhibitionLongitude,\n              maskDisplay: \"block\",\n              detailInfoDisplay: \"flex\"\n            });\n            console.log(\"当前周边景点是：\", data.poisData);\n          },\n          fail: function fail(info) {\n            console.log(\"poi函数中获取失败：\", info);\n          }\n        };\n        myAmapFun.getPoiAround(params);\n      } else {\n        Taro.showToast({\n          title: \"待收录\",\n          icon: \"error\"\n        });\n      }\n    });\n    //隐藏弹窗和蒙层+ 更改marker为未选中状态\n    _defineProperty(_this, \"hideMaskAndDetailInfo\", function () {\n      var that = _this;\n      that.changeSelectMarker(false); //更改marker为未选中状态\n      that.setState({\n        bottomDistance: '97px',\n        maskDisplay: 'none',\n        detailInfoDisplay: 'none',\n        markers: markersData,\n        //！！！！注意更新绑定到视图中的map的marker，样式才能改变！！！\n        isSearch: false\n      });\n    });\n    //绘制路线图\n    _defineProperty(_this, \"portraitPath\", function (pathName) {\n      var that = _this;\n      var waypoints = '';\n      var destination = '';\n      if (pathName != '') {\n        redPathData.filter(function (item) {\n          return item.pathName === pathName;\n        }).map(function (item) {\n          var pathExhibitionIdList = item.pathExhibitionIdList;\n          pathExhibitionIdList.map(function (item, index) {\n            var xiabiao = item - 1;\n            if (index === pathExhibitionIdList.length - 1) {\n              //最后一项\n              destination += \"\".concat(exhibitionTotalData[xiabiao].exhibitionLongitude, \",\").concat(exhibitionTotalData[xiabiao].exhibitionLatitude);\n            } else {\n              waypoints += \"\".concat(exhibitionTotalData[xiabiao].exhibitionLongitude, \",\").concat(exhibitionTotalData[xiabiao].exhibitionLatitude, \";\");\n            }\n          });\n        });\n        myAmapFun.getDrivingRoute({\n          origin: \"\".concat(_this.state.longitude, \",\").concat(_this.state.latitude),\n          // 起点我的定位\n\n          waypoints: waypoints,\n          // 途径点\n          destination: destination,\n          //终点\n          success: function success(data) {\n            var points = [];\n            if (data.paths && data.paths[0] && data.paths[0].steps) {\n              var steps = data.paths[0].steps;\n              for (var i = 0; i < steps.length; i++) {\n                var poLen = steps[i].polyline.split(';');\n                for (var j = 0; j < poLen.length; j++) {\n                  points.push({\n                    longitude: poLen[j].split(',')[0],\n                    latitude: poLen[j].split(',')[1]\n                  });\n                }\n              }\n            }\n            var mid = parseInt((points.length / 2).toString());\n            that.setState({\n              polyline: [{\n                points: points,\n                color: \"#ff0000\",\n                width: 6\n              }],\n              longitude: points[mid].longitude,\n              latitude: points[mid].latitude,\n              markers: markersData\n            });\n          },\n          fail: function fail(info) {\n            console.log(\"getDrivingRoute函数报错：\", info);\n          }\n        });\n      } else {\n        //获取用户当前位置\n        that.getUserLocation();\n        that.setState({\n          markers: markersData\n        });\n      }\n    });\n    //显示下拉列表\n    _defineProperty(_this, \"showPathNames\", function () {\n      if (_this.state.openAccordion) {\n        _this.setState({\n          openAccordion: false\n        });\n      } else {\n        _this.setState({\n          openAccordion: true\n        });\n        //更改样式\n      }\n    });\n    //获取点击的pathName\n    _defineProperty(_this, \"getPathName\", function (e) {\n      var that = _this;\n      var pathName = e._relatedInfo.anchorTargetText;\n      console.log(e._relatedInfo.anchorTargetText);\n      //传递给函数重新加载地图\n      //\n      //绘制线路\n      that.portraitPath(pathName);\n      //自动关闭\n      that.setState({\n        openAccordion: false\n      });\n    });\n    return _this;\n  }\n  _inherits(PoiPage, _Component);\n  return _createClass(PoiPage, [{\n    key: \"componentDidMount\",\n    value:\n    // 页面初始加载时\n    function componentDidMount() {\n      var _this$$instance$route;\n      var that = this;\n\n      //A->B\n      var simplifiedExhibitions = exhibitionTotalData.map(function (item) {\n        return {\n          id: item.id,\n          exhibitionName: item.exhibitionName,\n          latitude: item.exhibitionLatitude,\n          longitude: item.exhibitionLongitude\n        };\n      });\n      markersData = simplifiedExhibitions;\n      markersData.forEach(function (marker) {\n        if (onmarkerIdByUser.includes(marker.id)) {\n          //表示当前用户的这个标记点已经打过卡了\n          marker.iconPath = markerChecked;\n        } else {\n          marker.iconPath = markerUnChecked;\n        }\n        marker.height = 22;\n        marker.width = 22;\n        marker.callout = {\n          content: '📷' + marker.exhibitionName,\n          // 显示POI名称和展馆图片 B\n          color: '#000000',\n          fontSize: 14,\n          borderRadius: 10,\n          bgColor: '#ffffff',\n          padding: 10,\n          display: 'ALWAYS',\n          // 气泡始终显示 todo1.获取地图缩放的scale 2.当scale>=16时再显示\n          textAlign: 'center'\n        };\n      });\n\n      //绘制线路\n      that.portraitPath('');\n\n      //获取查询字符串\n      //因为inputtips的bindSearch()函数传递了路由参数\n      var paramsFromInputtips = (_this$$instance$route = this.$instance.router) === null || _this$$instance$route === void 0 ? void 0 : _this$$instance$route.params;\n      if (paramsFromInputtips && paramsFromInputtips.searchKeywords) {\n        console.log('执行了');\n        that.searchMarkerShowPoiList(paramsFromInputtips);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      return /*#__PURE__*/_jsxs(View, {\n        children: [/*#__PURE__*/_jsxs(View, {\n          className: \"poiPage\",\n          children: [/*#__PURE__*/_jsx(View, {\n            className: \"section\",\n            children: /*#__PURE__*/_jsx(Input, {\n              className: \"section_input\",\n              \"data-city\": this.state.city,\n              \"data-longitude\": this.state.longitude,\n              \"data-latitude\": this.state.latitude\n              // onTouchStart={this.bindInput.bind(this)}\n              ,\n              onClick: this.bindInput.bind(this),\n              placeholder: \"\\u641C\\u7D22\"\n            })\n          }), /*#__PURE__*/_jsx(View, {\n            className: \"top_float_box\",\n            children: /*#__PURE__*/_jsx(AtAccordion, {\n              open: this.state.openAccordion,\n              onClick: this.showPathNames.bind(this),\n              title: \"\\u7814\\u5B66\\u4E4B\\u8DEF\",\n              children: /*#__PURE__*/_jsx(AtList, {\n                hasBorder: false,\n                children: redPathData.length > 0 ? redPathData.map(function (item) {\n                  return /*#__PURE__*/_jsx(AtListItem, {\n                    // 确保每个项都有唯一的 key\n                    onClick: _this2.getPathName // 传递路径名称\n                    ,\n                    title: item.pathName,\n                    arrow: \"right\",\n                    thumb: item.pathImageUrl // 假设 imageUrl 是数组对象中的属性\n                  }, item.id);\n                }) : /*#__PURE__*/_jsx(AtListItem, {\n                  title: \"\\u6CA1\\u6709\\u53EF\\u7528\\u7684\\u8DEF\\u5F84\"\n                })\n              })\n            })\n          }), /*#__PURE__*/_jsxs(View, {\n            className: \"map_container\",\n            children: [/*#__PURE__*/_jsx(View, {\n              className: \"mask\",\n              style: {\n                display: this.state.maskDisplay\n              },\n              onClick: this.hideMaskAndDetailInfo\n            }), /*#__PURE__*/_jsx(Map, {\n              className: \"map\",\n              id: \"map\",\n              longitude: this.state.longitude,\n              latitude: this.state.latitude,\n              scale: this.state.scale,\n              showLocation: true,\n              markers: this.state.markers,\n              polyline: this.state.polyline,\n              onMarkerTap: this.makertap.bind(this),\n              onError: this.onmakerError.bind(this)\n            })]\n          }), /*#__PURE__*/_jsxs(View, {\n            className: \"bottom_float_box\",\n            children: [/*#__PURE__*/_jsx(Image, {\n              style: {\n                width: '27px',\n                height: '27px',\n                bottom: this.state.bottomDistance\n              },\n              className: \"get_location_icon\",\n              mode: \"scaleToFill\",\n              src: getUserLocationIcon,\n              onClick: this.getUserLocation\n            }), /*#__PURE__*/_jsx(View, {\n              style: {\n                display: this.state.detailInfoDisplay\n              },\n              children: this.state.isSearch ? /*#__PURE__*/_jsx(View, {\n                className: \"detail_info search_view\",\n                children: this.state.poisData.map(function (item, index) {\n                  return /*#__PURE__*/_jsx(View, {\n                    className: \"search_item\",\n                    children: /*#__PURE__*/_jsxs(View, {\n                      className: \"bottom_content\",\n                      children: [/*#__PURE__*/_jsxs(View, {\n                        className: \"content_header\",\n                        children: [/*#__PURE__*/_jsx(View, {\n                          className: \"info_title\",\n                          children:\n                          //@ts-ignore\n                          item.name\n                        }), /*#__PURE__*/_jsx(View, {\n                          className: \"info_address\",\n                          children:\n                          //@ts-ignore\n                          item.type\n                        }), /*#__PURE__*/_jsx(View, {\n                          className: \"info_note\",\n                          children:\n                          //@ts-ignore\n                          item.tel\n                        }), /*#__PURE__*/_jsxs(View, {\n                          className: \"info_distance\",\n                          children: [\n                          //@ts-ignore\n                          (item.distance / 1000).toFixed(2), \"km\"]\n                        })]\n                      }), /*#__PURE__*/_jsx(View, {\n                        className: \"content_footer\",\n                        children: /*#__PURE__*/_jsx(View, {\n                          children:\n                          //@ts-ignore\n                          item.address\n                        })\n                      })]\n                    })\n                  }, index);\n                })\n              }) : /*#__PURE__*/_jsxs(View, {\n                className: \"detail_info\",\n                children: [/*#__PURE__*/_jsx(View, {\n                  className: \"image_container\",\n                  children: /*#__PURE__*/_jsx(Image, {\n                    style: {\n                      width: '100%',\n                      height: '100%'\n                    },\n                    className: \"exhibition_image\",\n                    mode: \"scaleToFill\",\n                    src: this.state.exhibitionImage\n                  })\n                }), /*#__PURE__*/_jsxs(View, {\n                  className: \"bottom_content\",\n                  children: [/*#__PURE__*/_jsxs(View, {\n                    className: \"content_header\",\n                    children: [/*#__PURE__*/_jsx(View, {\n                      className: \"info_title\",\n                      children: this.state.exhibitionName\n                    }), /*#__PURE__*/_jsx(View, {\n                      className: \"info_note\",\n                      children: this.state.exhibitionNote\n                    }), /*#__PURE__*/_jsx(View, {\n                      className: \"info_distance\",\n                      children: this.state.exhibitionTime\n                    })]\n                  }), /*#__PURE__*/_jsx(View, {\n                    className: \"content_footer\",\n                    children: /*#__PURE__*/_jsx(View, {\n                      children: this.state.exhibitionAddress\n                    })\n                  })]\n                })]\n              })\n            })]\n          })]\n        }), /*#__PURE__*/_jsx(GlobalMenu, {})]\n      });\n    }\n  }]);\n}(Component);\nexport { PoiPage as default };","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"!!../../../node_modules/@tarojs/taro-loader/lib/entry-cache.js?name=pages/poi/index!./index.tsx\"\nvar config = {};\n\n\nvar inst = Page(createPageConfig(component, 'pages/poi/index', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n"],"names":[],"sourceRoot":""}