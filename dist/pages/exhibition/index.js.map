{"version":3,"file":"pages/exhibition/index.js","mappingstEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAGA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;AC1EA;AACA;;AAEA;AACA;AACA;AAFA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://mbti-test-mini/./src/pages/exhibition/index.tsx?aae6","webpack://mbti-test-mini/._src_components_ExhibitionListByFilter_index.tsx","webpack://mbti-test-mini/._src_components_ExhibitionList_index.tsx","webpack://mbti-test-mini/._src_components_ExhibitionSwiper_index.tsx","webpack://mbti-test-mini/._src_pages_exhibition_index.tsx"],"sourcesContent":["import _slicedToArray from \"E:/dianlianghongtu/dianlianghongtu/hongtu-test-mini/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _this = this;\nimport { Image, View } from \"@tarojs/components\";\nimport { AtTabs, AtTabsPane } from \"taro-ui\";\nimport Taro from \"@tarojs/taro\";\nimport { useEffect, useState } from \"react\";\nimport \"./index.scss\";\nimport exhibitionTotalData from \"../../data/exhibition_total_data.json\";\nimport knowImage from \"../../assets/know.jpg\";\nimport exhibition5 from \"../../assets/5.jpeg\";\nimport exhibition2 from \"../../assets/2.jpeg\";\nimport exhibition3 from \"../../assets/3.jpeg\";\nimport exhibition4 from \"../../assets/4.jpeg\";\nimport exhibition6 from \"../../assets/6.jpeg\";\nimport exhibition1 from \"../../assets/1.jpeg\";\nimport exhibition7 from \"../../assets/7.jpeg\";\nimport exhibition8 from \"../../assets/8.jpg\";\nimport ExhibitionSwiper from \"../../components/ExhibitionSwiper\";\nimport ExhibitionListByCategory from \"../../components/ExhibitionListByFilter\";\nimport GlobalMenu from \"../../components/GlobalMenu\";\n\n/**\n * 展馆首页\n */\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default (function () {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    current = _useState2[0],\n    setCurrent = _useState2[1];\n  var handleClick = function handleClick(value) {\n    setCurrent(value);\n  };\n  var tabList = [{\n    title: \"推荐\"\n  }, {\n    title: \"类别\"\n  }, {\n    title: \"时期\"\n  }];\n  var _useState3 = useState([exhibition5, exhibition4, exhibition3, exhibition2, exhibition1]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    banner = _useState4[0],\n    setBanner = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    dataList = _useState6[0],\n    setDataList = _useState6[1];\n  useEffect(function () {\n    setBanner([exhibition5, exhibition6, exhibition7, exhibition8, exhibition4]);\n    setDataList(exhibitionTotalData);\n    // setDataList([\n    //   {\n    //     id: 1,\n    //     exhibitionName: \"展馆1\",\n    //     categoryId: 1,\n    //     eraIdList: [1, 2],\n    //     exhibitionImage:\n    //       \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTk12jZMVtPDUvA_kFCiHJViauVmNSstlK8zSksY8A1iCiZ1uNzRaEAVCT0AOTlen7rpAU&usqp=CAU\",\n    //     exhibitionAddress: \"地址1\",\n    //     exhibitionStartTime: \"09:00\",\n    //     exhibitionFinishTime: \"18:00\",\n    //     exhibitionNote: \"周二至周五\",\n    //     exhibitionProfile: \"展馆简介\",\n    //     videoList: [\n    //       {\n    //         id: 1,\n    //         exhibitionId: 1,\n    //         videoName: \"展馆1的视频1\",\n    //         videoContent: \"视频1连接\",\n    //       },\n    //       {\n    //         id: 2,\n    //         exhibitionId: 1,\n    //         videoName: \"展馆1的视频2\",\n    //         videoContent: \"视频2连接\",\n    //       },\n    //     ],\n    //   },\n    //   {\n    //     id: 2,\n    //     exhibitionName: \"展馆2\",\n    //     categoryId: 2,\n    //     eraIdList: [2, 3],\n    //     exhibitionImage:\n    //       \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTk12jZMVtPDUvA_kFCiHJViauVmNSstlK8zSksY8A1iCiZ1uNzRaEAVCT0AOTlen7rpAU&usqp=CAU\",\n    //     exhibitionAddress: \"地址2\",\n    //     exhibitionStartTime: \"\",\n    //     exhibitionFinishTime: \"\",\n    //     exhibitionNote: \"全天\",\n    //     exhibitionProfile: \"展馆简介\",\n    //     videoList: [\n    //       {\n    //         id: 3,\n    //         exhibitionId: 2,\n    //         videoName: \"展馆2的视频1\",\n    //         videoContent: \"视频3连接\",\n    //       },\n    //     ],\n    //   },\n    //   {\n    //     id: 3,\n    //     exhibitionName: \"湖北省雷锋纪念馆\",\n    //     categoryId: 3,\n    //     eraIdList: [4],\n    //     exhibitionImage:\n    //       \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTk12jZMVtPDUvA_kFCiHJViauVmNSstlK8zSksY8A1iCiZ1uNzRaEAVCT0AOTlen7rpAU&usqp=CAU\",\n    //     exhibitionAddress: \"地址3\",\n    //     exhibitionStartTime: \"\",\n    //     exhibitionFinishTime: \"\",\n    //     exhibitionNote: \"全天\",\n    //     exhibitionProfile: \"展馆简介\",\n    //     videoList: [\n    //       {\n    //         id: 4,\n    //         exhibitionId: 3,\n    //         videoName: \"展馆3的视频1\",\n    //         videoContent: \"视频4连接\",\n    //       },\n    //     ],\n    //   },\n    //   // Add more items as needed\n    // ]);\n  }, [dataList]);\n  return /*#__PURE__*/_jsxs(View, {\n    children: [/*#__PURE__*/_jsx(View, {\n      className: \"exhibitionPage\",\n      children: /*#__PURE__*/_jsxs(AtTabs, {\n        current: current,\n        tabList: tabList,\n        onClick: handleClick.bind(_this),\n        className: \"exhibitionTabPage\",\n        children: [/*#__PURE__*/_jsx(AtTabsPane, {\n          current: current,\n          index: 0,\n          className: \"tabItem\",\n          children: /*#__PURE__*/_jsxs(View, {\n            style: \"padding: 10px;background-color: #f3f3f3;text-align:inherit;\",\n            className: \"tabItem_1\",\n            children: [/*#__PURE__*/_jsx(ExhibitionSwiper, {\n              banner: banner,\n              tabKey: 0\n            }), /*#__PURE__*/_jsx(Image, {\n              className: \"knowImage\",\n              src: knowImage,\n              onClick: function onClick() {\n                Taro.navigateTo({\n                  url: \"/pages/know/index\"\n                });\n              }\n            }), /*#__PURE__*/_jsx(ExhibitionListByCategory, {\n              dataList: dataList,\n              tabKey: 0\n            })]\n          })\n        }), /*#__PURE__*/_jsx(AtTabsPane, {\n          current: current,\n          index: 1,\n          children: /*#__PURE__*/_jsxs(View, {\n            style: \"padding: 10px;background-color: #f3f3f3;text-align: inherit;\",\n            className: \"tabItem_2\",\n            children: [/*#__PURE__*/_jsx(ExhibitionSwiper, {\n              banner: banner,\n              tabKey: 1\n            }), /*#__PURE__*/_jsx(Image, {\n              className: \"knowImage\",\n              src: knowImage,\n              onClick: function onClick() {\n                Taro.navigateTo({\n                  url: \"/pages/know/index\"\n                });\n              }\n            }), /*#__PURE__*/_jsx(ExhibitionListByCategory, {\n              dataList: dataList,\n              tabKey: 1\n            })]\n          })\n        }), /*#__PURE__*/_jsx(AtTabsPane, {\n          current: current,\n          index: 2,\n          children: /*#__PURE__*/_jsxs(View, {\n            style: \"padding: 10px;background-color: #f3f3f3;text-align: inherit;\",\n            className: \"tabItem_3\",\n            children: [/*#__PURE__*/_jsx(ExhibitionSwiper, {\n              banner: banner,\n              tabKey: 2\n            }), /*#__PURE__*/_jsx(Image, {\n              className: \"knowImage\",\n              src: knowImage,\n              onClick: function onClick() {\n                Taro.navigateTo({\n                  url: \"/pages/know/index\"\n                });\n              }\n            }), /*#__PURE__*/_jsx(ExhibitionListByCategory, {\n              dataList: dataList,\n              tabKey: 2\n            })]\n          })\n        })]\n      })\n    }), /*#__PURE__*/_jsx(GlobalMenu, {})]\n  });\n});","import {View} from \"@tarojs/components\";\nimport {AtTabs, AtTabsPane} from \"taro-ui\";\nimport {useEffect, useState} from \"react\";\nimport ExhibitionList from \"../ExhibitionList\";\nimport \"./index.scss\";\n\n/**\n * 根据传递过来的tabKey进行数据过滤\n */\nexport default ({ dataList, tabKey }) => {\n  const exhibitionEra = [\n    { title: \"新民主主义革命时期\" },\n    { title: \"社会主义革命和建设时期\" },\n    { title: \"改革开放和社会主义现代化建设时期\" },\n    { title: \"中国特色社会主义新时代\" },\n    { title: \"其他\" },\n  ];\n  type tabTitle = {\n    title: string;\n  };\n  const exhibitionCategory = [\n    { title: \"革命博物馆\" },\n    { title: \"纪念馆\" },\n    { title: \"烈士陵园\" },\n    { title: \"旧址\" },\n  ];\n  const [tabList, setTabList] = useState<tabTitle[]>([]);\n  useEffect(() => {\n    //参数含义：二级tab行名称\n    if (tabKey === 1) {\n      setTabList(exhibitionCategory);\n    } else if (tabKey === 2) {\n      setTabList(exhibitionEra);\n    } else {\n      setTabList([]);\n    }\n  }, [tabList]);\n\n  const [current, setCurrent] = useState(0);\n\n  const handleClick = (value) => {\n    setCurrent(value);\n  };\n  return (\n    <View className=\"exhibitionListByCategory\">\n      {tabList.length === 0 ? (\n        <ExhibitionList dataList={dataList} tabKey={tabKey} filterKey={0} />\n      ) : (\n        <AtTabs\n          current={current}\n          scroll\n          tabList={tabList}\n          onClick={handleClick.bind(this)}\n        >\n          {tabList &&\n            tabList.map((tabName, index) => (\n              <AtTabsPane current={current} index={index}>\n                <View style=\"background-color: #f3f3f3;text-align: inherit;\">\n                  <ExhibitionList\n                    dataList={dataList}\n                    tabKey={tabKey}\n                    filterKey={index + 1}\n                  />\n                </View>\n              </AtTabsPane>\n            ))}\n        </AtTabs>\n      )}\n    </View>\n  );\n};\n","import {Image, View} from \"@tarojs/components\";\nimport { AtList, AtListItem } from \"taro-ui\";\nimport Taro from \"@tarojs/taro\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./index.scss\";\n/**\n * 根据传递过来的tabKey进行数据过滤\n */\nexport default ({ dataList, tabKey, filterKey }) => {\n  type Exhibition = {\n    id: number;\n    exhibitionName: string;\n    categoryId: number;\n    eraIdList: number[];\n    exhibitionImage: string;\n    exhibitionAddress: string;\n    exhibitionStartTime: string;\n    exhibitionFinishTime: string;\n    exhibitionNote: string;\n  };\n  const [dataListByFilter, setDataListByFilter] = useState<Exhibition[]>([]);\n  useEffect(() => {\n    //category=1的展馆列表->即对dataList进行过滤->赋值给dataListByFilter\n    if (tabKey === 1 && filterKey !== 0) {\n      //分类：分类ID=选中的ID\n      setDataListByFilter(\n        dataList.filter((item) => item.categoryId === filterKey)\n      );\n    } else if (tabKey === 2 && filterKey !== 0) {\n      //时期：时期ID列表包括选中的时期ID即可\n      setDataListByFilter(\n        dataList.filter((item) => item.eraIdList.includes(filterKey))\n      );\n    } else {\n      //推荐(filterKey===0)\n      setDataListByFilter(dataList);\n    }\n  }, [dataListByFilter]);\n  return (\n    <View className=\"exhibitionList\">\n      <AtList className=\"listView\">\n        {dataListByFilter &&\n          dataListByFilter.map(data => (\n            <View\n              className=\"detail_info\"\n              onClick={() => {\n                    // Taro.setStorageSync(\"exhibitionId\",data.id);\n                    // Taro.setStorageSync(\"dataList\",dataList);\n                    Taro.navigateTo({\n                      url: \"/pages/exhibitionDetail/index?exhibitionId=\" + data.id,\n                    });\n                  }}\n            >\n              <View className=\"image_container\">\n                <Image\n                  style={{ width: '100%', height: '100%' }}\n                  className=\"exhibition_image\"\n                  mode=\"scaleToFill\"\n                  src={data.exhibitionImage}\n                />\n              </View>\n              <View className=\"bottom_content\">\n                <View className=\"content_header\">\n                  <View className=\"info_title\">{data.exhibitionName}</View>\n                  <View className=\"info_address\">{data.exhibitionAddress}</View>\n                  <View className=\"info_note\">{data.exhibitionNote}</View>\n                  <View className=\"info_distance\">{`${data.exhibitionStartTime} - ${data.exhibitionFinishTime}`}</View>\n                </View>\n              </View>\n            </View>\n          ))}\n      </AtList>\n    </View>\n  );\n};\n","import { Image, Swiper, SwiperItem, View } from \"@tarojs/components\";\nimport \"./index.scss\";\n\n/**\n * 展馆轮播图组件(获取父组件传递过来的dataList(点击tab后传递tabKey->调用后端接口->获取dataList)->进行展示))\n */\nexport default ({ banner, tabKey }) => {\n  const autoplay = true;\n  const indicatorDots = true;\n  const circular = true;\n  return (\n    <View>\n      <Swiper\n        className=\"test-h exhibitionSwiper\"\n        indicatorColor=\"#999\"\n        indicatorActiveColor=\"#de1f1a\"\n        circular={circular}\n        indicatorDots={indicatorDots}\n        autoplay={autoplay}\n      >\n        {banner && banner.map((item, index) => (\n          <SwiperItem key={index}>\n            <Image\n              className=\"swiper-img\"\n              src={item}\n            />\n          </SwiperItem>\n        ))}\n      </Swiper>\n    </View>\n  );\n};\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"!!../../../node_modules/@tarojs/taro-loader/lib/entry-cache.js?name=pages/exhibition/index!./index.tsx\"\nvar config = {};\n\n\nvar inst = Page(createPageConfig(component, 'pages/exhibition/index', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n"],"names":[],"sourceRoot":""}